<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Node.js事件模块]]></title>
      <url>/2017/06/05/Node.js%E4%BA%8B%E4%BB%B6%E6%A8%A1%E5%9D%97/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Node.js小爬虫]]></title>
      <url>/2017/06/05/Node.js%E5%B0%8F%E7%88%AC%E8%99%AB/</url>
      <content type="html"><![CDATA[<h3 id="一、视频地址"><a href="#一、视频地址" class="headerlink" title="一、视频地址"></a>一、视频地址</h3><p>慕课网 <a href="http://www.imooc.com/video/7965" target="_blank" rel="external">http://www.imooc.com/video/7965</a></p>
<h3 id="二、直接上源码"><a href="#二、直接上源码" class="headerlink" title="二、直接上源码"></a>二、直接上源码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/** * http小爬虫 </span></div><div class="line">* @author 牟一全</div><div class="line">* @version 1.0 </div><div class="line">*/ </div><div class="line"><span class="comment">/** </span></div><div class="line">* 获取http模块 </div><div class="line">*/ </div><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>); </div><div class="line"><span class="comment">/** </span></div><div class="line">* 获取cheerio模块 </div><div class="line">*/ </div><div class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">'./node_modules/cheerio'</span>); </div><div class="line"><span class="comment">/** </span></div><div class="line">* 解析的目标网页 </div><div class="line">*/ </div><div class="line"><span class="keyword">var</span> url = <span class="string">'http://www.imooc.com/learn/348'</span>; </div><div class="line"><span class="comment">/**</span></div><div class="line">* </div><div class="line">* 将爬取到的网页内容进行过滤调整 </div><div class="line">* @param &#123;string&#125; html </div><div class="line">* @returns &#123;&#123;chapterTitle:string,videos:[&#123;title:string,time:string,id:string&#125;]&#125;&#125; 返回过滤到的对象 */ </div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">filterChapters</span>(<span class="params">html</span>) </span>&#123; </div><div class="line">	<span class="comment">// cheerio加载html </span></div><div class="line">	<span class="keyword">var</span> $ = cheerio.load(html); </div><div class="line">	<span class="keyword">var</span> chapters = $(<span class="string">'.chapter'</span>); </div><div class="line">	<span class="keyword">var</span> courseData = []; </div><div class="line">	<span class="keyword">var</span> chapter, Title, videos, chapterData; </div><div class="line">	<span class="keyword">var</span> videos, videoTitle, id; </div><div class="line">	chapters.each(<span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123; </div><div class="line">	chapter = $(<span class="keyword">this</span>); </div><div class="line">	<span class="comment">/** nodeType返回值说明 </span></div><div class="line">	* 1-ELEMENT </div><div class="line">	* 2-ATTRIBUTE </div><div class="line">	* 3-TEXT </div><div class="line">	* 4-CDATA </div><div class="line">	* 5-ENTITY REFERENCE </div><div class="line">	* 6-ENTITY </div><div class="line">	* 7-PI (processing instruction) </div><div class="line">	* 8-COMMENT </div><div class="line">	* 9-DOCUMENT </div><div class="line">	* 10-DOCUMENT TYPE </div><div class="line">	* 11-DOCUMENT FRAGMENT </div><div class="line">	* 12-NOTATION */ </div><div class="line">	<span class="comment">// 过滤不提取子类中的text </span></div><div class="line">	Title = chapter.find(<span class="string">'strong'</span>).contents().filter(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; </div><div class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.nodeType == <span class="number">3</span>; </div><div class="line">	&#125;).text().trim(); </div><div class="line">	chapterData = &#123; </div><div class="line">		<span class="string">"chapterTitle"</span>: Title, </div><div class="line">		<span class="string">"videos"</span>: [] </div><div class="line">	&#125; </div><div class="line">	videos = chapter.find(<span class="string">'.video'</span>).children(<span class="string">'li'</span>); </div><div class="line">	videos.each(<span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123; </div><div class="line">		video = $(<span class="keyword">this</span>).find(<span class="string">'.J-media-item'</span>); </div><div class="line">		</div><div class="line">		<span class="comment">// 这个title包含了video的title和这个video的时间,两者用换行符分割 </span></div><div class="line">		videoTitles = video.contents().filter(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; </div><div class="line">			<span class="keyword">return</span> <span class="keyword">this</span>.nodeType == <span class="number">3</span>; </div><div class="line">		&#125;).text().trim().split(<span class="string">'\n'</span>); </div><div class="line">		</div><div class="line">	id = video.attr(<span class="string">'href'</span>).split(<span class="string">'video/'</span>)[<span class="number">1</span>]; </div><div class="line">	</div><div class="line">	chapterData.videos.push(&#123; </div><div class="line">		<span class="string">"title"</span>: videoTitles[<span class="number">0</span>].trim(), </div><div class="line">		<span class="string">"time"</span>: videoTitles[<span class="number">1</span>].trim(), </div><div class="line">		<span class="string">"id"</span>: id </div><div class="line">		&#125;); </div><div class="line">	&#125;); </div><div class="line">	courseData.push(chapterData); </div><div class="line">	&#125;); </div><div class="line">	<span class="keyword">return</span> courseData; </div><div class="line">&#125; </div><div class="line"><span class="comment">/** </span></div><div class="line">* 打印课程信息 </div><div class="line">* @param &#123;&#123;chapterTitle:string,videos:[&#123;title:string,time:string,id:string&#125;]&#125;&#125; courseData 课程信息 </div><div class="line">*/ </div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">printCoursrInfo</span>(<span class="params">courseData</span>) </span>&#123; </div><div class="line">	<span class="keyword">var</span> courseMessage = <span class="string">''</span>; </div><div class="line">	courseData.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">value, index</span>) </span>&#123; </div><div class="line">		courseMessage += value.chapterTitle + <span class="string">'\n'</span>; </div><div class="line">		value.videos.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">value, index</span>) </span>&#123; </div><div class="line">			courseMessage += <span class="string">'['</span> + value.id + <span class="string">'] '</span> + value.title + <span class="string">' time:'</span> + value.time + <span class="string">'\n'</span>; </div><div class="line">		&#125;); </div><div class="line">		courseMessage += <span class="string">'\n'</span>; </div><div class="line">	&#125;); </div><div class="line">	<span class="built_in">console</span>.log(courseMessage); </div><div class="line">&#125; </div><div class="line">http.get(url, <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123; </div><div class="line">	<span class="keyword">var</span> html = <span class="string">''</span>; </div><div class="line">	</div><div class="line">	res.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123; </div><div class="line">		html += data; </div><div class="line">	&#125;); </div><div class="line">	</div><div class="line">	res.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; </div><div class="line">		<span class="keyword">var</span> courseData = filterChapters(html); </div><div class="line">		printCoursrInfo(courseData); </div><div class="line">	&#125;); </div><div class="line">&#125;).on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="built_in">console</span>.log(<span class="string">'课程爬取失败!!!!'</span>); &#125;);</div></pre></td></tr></table></figure>
<h3 id="三、什么是cheerio"><a href="#三、什么是cheerio" class="headerlink" title="三、什么是cheerio"></a>三、什么是cheerio</h3><p>相当于html的jquery，但是服务的是服务端，就不是前端了</p>
<h3 id="四、说明"><a href="#四、说明" class="headerlink" title="四、说明"></a>四、说明</h3><p>只能爬取静态页面的资源，比如ajax动态渲染是爬取不到的</p>
<h3 id="五、体会"><a href="#五、体会" class="headerlink" title="五、体会"></a>五、体会</h3><p>在each循环内部反复的声明变量会使内存没有必要的损耗,更好的做法是延长变量的生命周期,在函数的顶部先定义,然后每次改变它们的值,由于这些变量本身的类型还是一致的,职责单一,在V8的速度上也会更快，最好还是在上一级申明变量，避免重复声明。</p>
]]></content>
      
        <categories>
            
            <category> Node.js </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> Node.js小爬虫 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[http源码解读]]></title>
      <url>/2017/06/05/http%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Node.js作用域与上下文]]></title>
      <url>/2017/06/05/Node.js%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E4%B8%8A%E4%B8%8B%E6%96%87/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[node.js之入门编程]]></title>
      <url>/2017/06/05/Node.js%E4%B9%8B%E5%85%A5%E9%97%A8%E7%BC%96%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h3 id="一、Hello-World"><a href="#一、Hello-World" class="headerlink" title="一、Hello World"></a>一、Hello World</h3><p>打开一个文本编辑器，在其中输入<br>console.log(‘Hello World’);<br>并保存问helloworld.js。打开dos窗口进入该文件的目录<br>运行node helloworld.js执行则可以看到输出的helloworld</p>
<h3 id="二、Node-js命令行工具"><a href="#二、Node-js命令行工具" class="headerlink" title="二、Node.js命令行工具"></a>二、Node.js命令行工具</h3><p>node -v版本<br>1.node -e eval scipt eval(“console.log(“呵呵”)”)；<br>例如:<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">node</span> <span class="title">-e</span> <span class="string">"console.log("</span>hello world<span class="string">")"</span>;直接执行</div></pre></td></tr></table></figure></p>
<p>2.输入node直接进入编译模式<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">console.log(<span class="string">"hello world"</span>)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>第一行是输出，第二行则是返回值</p>
<h3 id="三、建立Http服务器"><a href="#三、建立Http服务器" class="headerlink" title="三、建立Http服务器"></a>三、建立Http服务器</h3><p>创建一个app.js<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var http = <span class="built_in">require</span>(<span class="string">"http"</span>);</div><div class="line">http.createServer(<span class="function"><span class="keyword">function</span><span class="params">(req,res)</span></span>&#123;</div><div class="line">	res.writeHead(<span class="number">200</span>,&#123;<span class="string">"Content-Type"</span>:<span class="string">"text/html"</span>&#125;);</div><div class="line">	res.<span class="built_in">write</span>(<span class="string">'&lt;h1&gt;Node.js&lt;/h1&gt;'</span>);</div><div class="line">	res.<span class="keyword">end</span>(<span class="string">'&lt;p&gt;PCAT&lt;/p&gt;'</span>);</div><div class="line">&#125;).listen(<span class="number">3000</span>); </div><div class="line">console.<span class="built_in">log</span>(<span class="string">'HTTP server is listening at port 3000.'</span>);</div></pre></td></tr></table></figure></p>
<p>接下来node app.js打开浏览器访问<a href="http://localhost:3000" target="_blank" rel="external">http://localhost:3000</a> 即可。这样就部署了一个web。比tomcat、resin更加方便。</p>
<h3 id="四、调试代码-supervisor"><a href="#四、调试代码-supervisor" class="headerlink" title="四、调试代码(supervisor)"></a>四、调试代码(supervisor)</h3><p><code>supervisor:不必每次修改代码之后重启服务，相当与Ider的热部署</code><br>安装Node.js调试模块：<br><code>全局</code>：执行<code>npm  install  &lt;模块的名字&gt;  -g（ps:linux请加上sudo增加权限）</code> 就会将模块装在全局路径下，当用户在程序中require(&lt;模块的名字&gt;)的时候不用考虑模块在哪，如果不修改全局路径，用户下载的模块会默认在<code>C:\Users\Administrator\AppData\Roaming\npm</code>这个路径下。<br><code>局部</code>：执行<code>npm  install  &lt;包的名字&gt;（注意少了-g）</code>就会将模块安装在dos窗当前指向的路径下,这时候其他路径项目无法引用到该版本的supervisor模块！<br><code>如果你想修改全局默认模块可以看这里·(不像想造成更多的麻烦最好不要修改)</code><br><a href="http://www.cnblogs.com/GeoChen/p/5496322.html" target="_blank" rel="external">http://www.cnblogs.com/GeoChen/p/5496322.html</a></p>
<h3 id="五、安装supervisor遇到的问题（之后安装其他模块也许也会遇到）"><a href="#五、安装supervisor遇到的问题（之后安装其他模块也许也会遇到）" class="headerlink" title="五、安装supervisor遇到的问题（之后安装其他模块也许也会遇到）"></a>五、安装supervisor遇到的问题（之后安装其他模块也许也会遇到）</h3><h4 id="1-我是全局安装为什么我还是用不起该命令"><a href="#1-我是全局安装为什么我还是用不起该命令" class="headerlink" title="1.我是全局安装为什么我还是用不起该命令"></a>1.我是全局安装为什么我还是用不起该命令</h4><p>答:虽然是安装在全局路径，但是安装配置文件中不允许</p>
<h4 id="2-为什么我是全局路径，我在Dos里面只有在安装目录可以使用，而在其它地方不能使用"><a href="#2-为什么我是全局路径，我在Dos里面只有在安装目录可以使用，而在其它地方不能使用" class="headerlink" title="2.为什么我是全局路径，我在Dos里面只有在安装目录可以使用，而在其它地方不能使用"></a>2.为什么我是全局路径，我在Dos里面只有在安装目录可以使用，而在其它地方不能使用</h4><p>答:未在计算机上配置环境变量，导致不能被使用<br><code>ps:由于没有bin目录，我将全局安装目录C:\Users\myq\AppData\Roaming\npm放入了环境变量之中，这样后面所有安装在该目录下的模块就都可以不用配置了</code></p>
<h4 id="3-为什么我用git-bash在任何地方都不能使用该命令，即使是安装目录"><a href="#3-为什么我用git-bash在任何地方都不能使用该命令，即使是安装目录" class="headerlink" title="3.为什么我用git bash在任何地方都不能使用该命令，即使是安装目录"></a>3.为什么我用git bash在任何地方都不能使用该命令，即使是安装目录</h4><p>答：我没有找到答案，知道的希望分享一下，但是我配置了环境变量之后就可以使用了。</p>
]]></content>
      
        <categories>
            
            <category> Node.js </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> Node.js入门编程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[node.js概述及安装]]></title>
      <url>/2017/06/04/Node.js%E6%A6%82%E8%BF%B0%E5%8F%8A%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="一、Node-js是什么-emsp"><a href="#一、Node-js是什么-emsp" class="headerlink" title="一、Node.js是什么&emsp;"></a>一、Node.js是什么&emsp;</h3><p>&emsp;Node.js不是一门独立的语言，与PHP、java、.net及是开发语言也是平台不同，也不是javaScript的框架jquery等，更不是浏览器库ExtJs,不能与ExtJs相提并论。Node.js是一个让JavaScript运行在服务器端的开发平台。</p>
<h3 id="二、Node-js能做什么"><a href="#二、Node-js能做什么" class="headerlink" title="二、Node.js能做什么?"></a>二、Node.js能做什么?</h3><p>&emsp;JaveScript是由客服端而产生，Node.js为网络而生。<br>&emsp;应用:<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span>复杂逻辑的网站</div><div class="line"><span class="number">2.</span>社交网络的大Web的应用</div><div class="line"><span class="number">3.</span>b Socket服务器</div><div class="line"><span class="number">4.</span>P/UDP套间字应用程序</div><div class="line"><span class="number">5.</span>行工具</div><div class="line"><span class="number">6.</span>式终端程序</div></pre></td></tr></table></figure></p>
<h3 id="三、异步I-O与事件驱动"><a href="#三、异步I-O与事件驱动" class="headerlink" title="三、异步I/O与事件驱动"></a>三、异步I/O与事件驱动</h3><p>&emsp;Node.js最大的特性就是采用异步式I/O与事件驱动的架构设计。对于高并发的解决方案，传统的架构是多线程模型，也就是为每个业务逻辑提供一个系统线程，通过系统线程切换来弥补同步式I/O调用时的时间开销。Node.js使用的单线程模型，在执行的过程中会维护一个事件队列，程序在执行时进入时间循环等待下一个事件的到来。<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="section">普通: </span></div><div class="line">res=db.query(<span class="string">"select * from user"</span>);</div><div class="line">res.output();</div><div class="line"><span class="section">Node.js:</span></div><div class="line">res=db.query(<span class="string">"select * from user"</span>,function(res)&#123;</div><div class="line">	res.output();</div><div class="line"><span class="section">&#125;):</span></div></pre></td></tr></table></figure></p>
<p>程序会自动向下执行</p>
<h3 id="四、浏览器引擎革命"><a href="#四、浏览器引擎革命" class="headerlink" title="四、浏览器引擎革命"></a>四、浏览器引擎革命</h3><p>Google Chrome的引擎是V8。Node.js的引擎引用的就是V8。所以它块，为什么ExtJs在Chrome如此的快，就是因为它。</p>
<h3 id="五、部署Node-js的环境"><a href="#五、部署Node-js的环境" class="headerlink" title="五、部署Node.js的环境"></a>五、部署Node.js的环境</h3><p>Node.js官方：<a href="http://nodejs.org" target="_blank" rel="external">http://nodejs.org</a><br>各种操作系统安装步骤:<a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="external">http://www.runoob.com/nodejs/nodejs-install-setup.html</a><br><code>注意:想要在任何地方运行一定要配置环境变量</code></p>
]]></content>
      
        <categories>
            
            <category> Node.js </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> Node.js安装 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[http概念进阶]]></title>
      <url>/2017/06/04/http%E6%A6%82%E5%BF%B5%E8%BF%9B%E9%98%B6/</url>
      <content type="html"><![CDATA[<h3 id="什么是回调？"><a href="#什么是回调？" class="headerlink" title="什么是回调？"></a>什么是回调？</h3><h3 id="什么是异步-同步？"><a href="#什么是异步-同步？" class="headerlink" title="什么是异步/同步？"></a>什么是异步/同步？</h3><h3 id="什么是I-O？"><a href="#什么是I-O？" class="headerlink" title="什么是I/O？"></a>什么是I/O？</h3><h3 id="什么是单线程-多线程"><a href="#什么是单线程-多线程" class="headerlink" title="什么是单线程/多线程"></a>什么是单线程/多线程</h3><h3 id="什么是阻塞-非阻塞"><a href="#什么是阻塞-非阻塞" class="headerlink" title="什么是阻塞/非阻塞"></a>什么是阻塞/非阻塞</h3><h3 id="什么是事件？"><a href="#什么是事件？" class="headerlink" title="什么是事件？"></a>什么是事件？</h3><h3 id="什么是事件驱动？"><a href="#什么是事件驱动？" class="headerlink" title="什么是事件驱动？"></a>什么是事件驱动？</h3><h3 id="什么是基于事件驱动归档回调？"><a href="#什么是基于事件驱动归档回调？" class="headerlink" title="什么是基于事件驱动归档回调？"></a>什么是基于事件驱动归档回调？</h3><h3 id="什么事事件循环？"><a href="#什么事事件循环？" class="headerlink" title="什么事事件循环？"></a>什么事事件循环？</h3>]]></content>
      
        <categories>
            
            <category> Http知识 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Http知识 </tag>
            
            <tag> Http概念进阶 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[http知识之状态码]]></title>
      <url>/2017/06/04/http%E7%9F%A5%E8%AF%86%E4%B9%8B%E7%8A%B6%E6%80%81%E7%A0%81/</url>
      <content type="html"><![CDATA[<h3 id="一、Http状态码"><a href="#一、Http状态码" class="headerlink" title="一、Http状态码"></a>一、Http状态码</h3><table>
<thead>
<tr>
<th>状态码</th>
<th>对应的信息</th>
</tr>
</thead>
<tbody>
<tr>
<td>1xx</td>
<td>表示请求已经接受，继续处理</td>
</tr>
<tr>
<td>2xx</td>
<td>表示成功处理</td>
</tr>
<tr>
<td>3xx</td>
<td>表示重定向</td>
</tr>
<tr>
<td>4xx</td>
<td>客服端错误，语法错误</td>
</tr>
<tr>
<td>5xx</td>
<td>服务器端错误</td>
</tr>
</tbody>
</table>
<h3 id="二、常出现的状态码"><a href="#二、常出现的状态码" class="headerlink" title="二、常出现的状态码"></a>二、常出现的状态码</h3><h4 id="1-200"><a href="#1-200" class="headerlink" title="1.200"></a>1.200</h4><p>接受处理成功</p>
<h4 id="2-304"><a href="#2-304" class="headerlink" title="2.304"></a>2.304</h4><p>资源重定向(解决方案:清楚缓存)</p>
<h4 id="3-400"><a href="#3-400" class="headerlink" title="3.400"></a>3.400</h4><p>客户端请求语法错误</p>
<h4 id="4-401"><a href="#4-401" class="headerlink" title="4.401"></a>4.401</h4><p>请求没有经过授权</p>
<h4 id="5-403"><a href="#5-403" class="headerlink" title="5.403"></a>5.403</h4><p>服务器端收到请求，但是拒绝了（可能是没有权限）</p>
<h4 id="6-404"><a href="#6-404" class="headerlink" title="6.404"></a>6.404</h4><p>没找到，对象不存在(或者输错地址url)</p>
<h4 id="7-500"><a href="#7-500" class="headerlink" title="7.500"></a>7.500</h4><p>服务器端发生了一个不可预期的错误</p>
<h4 id="8-503"><a href="#8-503" class="headerlink" title="8.503"></a>8.503</h4><p>服务器端当前还不能处理这个请求，过段时间才能恢复正常</p>
]]></content>
      
        <categories>
            
            <category> Http知识 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Http知识 </tag>
            
            <tag> 状态码 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[送给我的学弟学妹们]]></title>
      <url>/2017/06/01/%E9%80%81%E7%BB%99%E6%88%91%E7%9A%84%E5%AD%A6%E5%BC%9F%E5%AD%A6%E5%A6%B9%E4%BB%AC/</url>
      <content type="html"><![CDATA[<h1 id="不忘初心-方得始终"><a href="#不忘初心-方得始终" class="headerlink" title="不忘初心 方得始终"></a>不忘初心 方得始终</h1><h4 id="欢迎各位高中的小伙伴们来到我的博客"><a href="#欢迎各位高中的小伙伴们来到我的博客" class="headerlink" title="欢迎各位高中的小伙伴们来到我的博客"></a>欢迎各位高中的小伙伴们来到我的博客</h4><hr>
<p>这次我会为大家分享一下我的高中以及大学的个人经历，以及高考前的状态，高考的正确姿态，调整心态，如何选择，如何改变自我等。<br>高考前应该做的事：</p>
<blockquote>
<ul>
<li>控制  –控制自己波动的情绪，切忌悲喜频繁切换，一颗平常心决定了你发挥的状态</li>
<li>学习 –看大纲学习，舍弃该放弃的，得到必须得到的，切忌专研，长时间停留，把思维固定及其危险</li>
<li>不得放松  –一但放松，你可能就收不回来了，高考前的端午很不好，一定要收心，收心，收心</li>
</ul>
</blockquote>
<p>高考一定要<code>放弃一切全力高考</code>，分数决定选择的起点，放弃恋爱吧，放弃对未来的幻想，放弃家里对自己的期望，放空思维，这一刻，我只为自己高考。</p>
<p>高考的时候我在。。’’撩妹’’，你敢信,结果撩到了工商大学这个坑，师资力量一度让我绝望。</p>
<p>其实每天早上喊喊口号也不错的：我是某某，我要考某某大学，某某专业，我为自己而考。也许并不整齐的声音或多不便，但让自己安静前行的力量一点点的累积。</p>
<p>大战在即，勇士磨枪，剑拔弩张。塞北风尘，旷野苍苍，战火熊熊。最不惧少年郎，看我豪情万丈。披袍马上，纵西风烈烈，战马嘶嚎，定旗开得胜。看我河山大好，前程锦绣，气吞万里。不负我尝胆卧薪，三千岁月苦与甜。亲人遥寄，望前程大好，金榜题名。</p>
<p>高考真的很简单，比平时模拟题简单，高考考的就是心态，你能不能抗住高考的压力，仔仔细细的把该做的做完。扛住了，你比那些平时比你好的人考的更好，你能比他上更好的大学，得到更好的平台，扛不住就只能大家一起非正常发挥。</p>
<p>请不要在现在这个时刻期待大学，我允许你心里默念：某某大学，我来了。(ps：百度在计算机专业只要985,211)</p>
<p>不管我们何时何地和什么人在一起，我们都应该知到”Who i am”，这是个哲学问题。当有人问我时，我这样回答：我是一个学生，我的必须做的事情是努力学习，这不仅仅是父母的期望，不是为了谁谁学习，学到的才是自己的，我是父母的儿子，我有义务经常问候，关心他们。我是一个即将面临找工作的大三学生，我必须找到一份能让我在重庆活得不错的工资。我是她的的男朋友，我必须照顾好她。我就是我，不断在超越自我的我。找清自己的位置，自己是谁，该做什么，目标是什么。</p>
<p>寒窗苦读，肩负改变命运之使命，你们是最棒的。我仅代表高2014级11班（光棍班）全体学生送来最真挚的问候，我们在重庆，四川，武汉，广东，天津为你们默默加油。</p>
<p>下面这些高考之后再看吧：<br>学习不分先后，达者为师。（骗人的，会得罪人的）<br>下面的话权当学长个人三年感悟：根据“前景、市场、兴趣“选择专业，一定要按顺序，当然可以不听我的，全评个人情况而定。根据专业选择学校，对学校排名。根据分数去找到能进且最好的学校。当然，这只是我的提议。兴趣也很重要，为什么我排在最后，当你没钱吃饭喊妈妈的时候就知道了。</p>
<p>本人大学大一时，深陷高考失利的痛苦，经常做梦回去复读，想想真的挺怕的。自甘堕落，沉沦自我，大二时：依然没有重拾自我，没有目标，只是开始好好学习。大二末：认识女朋友侯兰，定下目标，重拾自我，拼命学习，拼命补充前两年的空缺。大三上：我已经没有了时间再去细想喜欢什么，学习，成长，学习，成长。。。当你失意的时候，真的需要一个人，一个人拉你一把，走出深渊。大三下：不仅仅是学习，做项目，各种比赛，挤时间学车，兼职，谈恋爱，我俨然忙成狗，而不满学习实习的我，又在忙于找实习，我已经没有时间喘气了，我不会停滞我前进的脚步，改变世界，从“Hello World（世界第一个程序）”开始。</p>
<p>在这花花世界里，迷失自我是一件非常可怕的事情，不要迷恋游戏，不要在迷恋某一项自己都认为是错的事情，回想起来真的很贱。大千世界，无奇不有，坚守本心，我在重庆工商大学，等着你们的好消息。</p>
]]></content>
      
        <categories>
            
            <category> 经验分享 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 选择大学 </tag>
            
            <tag> 经验 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[初试之二面]]></title>
      <url>/2017/06/01/%E5%88%9D%E8%AF%95%E4%B9%8B%E4%BA%8C%E9%9D%A2/</url>
      <content type="html"><![CDATA[<p>对于今天的二面心路历程：期待–忐忑–兴奋–懵逼–无聊–再见。<br>总之：今天才发现面的公司是之前来我们学校招人的外包公司，不能说是差，是学到东西，薪资待遇也不理想，所以决定明天不去继续面了，虽然浪费了我很多时间，但还是巩固了一下之前自学的东西。<br>还是有那么点收获的吧。</p>
]]></content>
      
        <categories>
            
            <category> 经历 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2017/5月总结]]></title>
      <url>/2017/05/31/2017-5%E6%9C%88%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<h4 id="一、五月到底有多忙："><a href="#一、五月到底有多忙：" class="headerlink" title="一、五月到底有多忙："></a>一、五月到底有多忙：</h4><p>实习面试，上班，学车，上课，互联网+大赛，网页设计决赛，课程答辩等。</p>
<h4 id="二、处理"><a href="#二、处理" class="headerlink" title="二、处理"></a>二、处理</h4><p>5月11课程答辩，在存在bug的情况下发布了web项目的初版，顺利通过考试。之后开始写网页设计决赛的作品，平时每周都上一天班，在空闲时间就刷刷面试题，看看别人的博客，学习nodejs。我是被拉到了经济学院的团队，然后同时写互联网+大赛的网页展示，一个晚上写完。中间去了一面，感觉小姐姐挺和蔼的，当时不知道二面怎么样，就六月初去咯。5月30和科三小团队去了考场，我一个人没有合场，五月31日和女朋友顺利通过科三科四，回来时下午3:30，录入数据，添加网页设计大赛测试数据到五点半，然后和李滔演示，检查修改bug，六点四十出发去比赛场地，二等奖。</p>
<h4 id="四、收获"><a href="#四、收获" class="headerlink" title="四、收获"></a>四、收获</h4><p>五月到底有多忙，只有自己知道，得到了什么也只有自己知道，不负五月。</p>
]]></content>
      
        <categories>
            
            <category> 随笔，经验，月总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 月总结 </tag>
            
            <tag> 经验之谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Cant connect to MYSQL server on localhost(10038)]]></title>
      <url>/2017/05/26/Cant-connect-to-MYSQL-server-on-localhost-10038/</url>
      <content type="html"><![CDATA[<h3 id="一、错误原因"><a href="#一、错误原因" class="headerlink" title="一、错误原因"></a>一、错误原因</h3><p>When Navicate connect Mysql，this Service is off.<br><img src="/imgs/mysqlErrorNotConnect.png"></p>
<h3 id="二、解决方案"><a href="#二、解决方案" class="headerlink" title="二、解决方案"></a>二、解决方案</h3><h4 id="1-打开任务管理器并切换选项卡到服务"><a href="#1-打开任务管理器并切换选项卡到服务" class="headerlink" title="1.打开任务管理器并切换选项卡到服务"></a>1.打开任务管理器并切换选项卡到服务</h4><p><img src="/imgs/taskManage.png"></p>
<h4 id="2-点击服务"><a href="#2-点击服务" class="headerlink" title="2.点击服务"></a>2.点击服务</h4><p><img src="/imgs/service.png"></p>
<h4 id="3-选择MYSQL并右键启动即可"><a href="#3-选择MYSQL并右键启动即可" class="headerlink" title="3.选择MYSQL并右键启动即可"></a>3.选择MYSQL并右键启动即可</h4><p><img src="/imgs/allService.png"></p>
]]></content>
      
        <categories>
            
            <category> MysqlError </category>
            
        </categories>
        
        
        <tags>
            
            <tag> error </tag>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[windows下用cmd命令新建用户]]></title>
      <url>/2017/05/24/windows%E4%B8%8B%E7%94%A8cmd%E5%91%BD%E4%BB%A4%E6%96%B0%E5%BB%BA%E7%94%A8%E6%88%B7/</url>
      <content type="html"><![CDATA[<h3 id="一、打-开DOS操作窗口，点击“开始”菜单，选择“命令提示符”"><a href="#一、打-开DOS操作窗口，点击“开始”菜单，选择“命令提示符”" class="headerlink" title="一、打 开DOS操作窗口，点击“开始”菜单，选择“命令提示符”"></a>一、打 开DOS操作窗口，点击“开始”菜单，选择“命令提示符”</h3><p><code>快捷键</code>: windows+r 然后输入cmd</p>
<h3 id="二、添加账号net-user-test-test123-add"><a href="#二、添加账号net-user-test-test123-add" class="headerlink" title="二、添加账号net user test test123 /add"></a>二、添加账号net user test test123 /add</h3><p><img src="/imgs/useradd.png"></p>
<h3 id="三、添加管理员权限net-localgroup-Administrators-test-add"><a href="#三、添加管理员权限net-localgroup-Administrators-test-add" class="headerlink" title="三、添加管理员权限net localgroup Administrators test /add"></a>三、添加管理员权限net localgroup Administrators test /add</h3><p><img src="/imgs/poweradd.png"></p>
<h3 id="四、查看用户权限net-localgroup-administrators或者net-user-test"><a href="#四、查看用户权限net-localgroup-administrators或者net-user-test" class="headerlink" title="四、查看用户权限net localgroup administrators或者net user test"></a>四、查看用户权限net localgroup administrators或者net user test</h3><p><img src="/imgs/powerStatus1.png"><br>或者<br><img src="/imgs/powerStatus2.png"></p>
<h3 id="五、删除权限net-localgroup-administrators-test-del"><a href="#五、删除权限net-localgroup-administrators-test-del" class="headerlink" title="五、删除权限net localgroup administrators test /del"></a>五、删除权限net localgroup administrators test /del</h3><p><img src="/imgs/powerdel.png"></p>
<h3 id="六、删除账号net-user-test-del"><a href="#六、删除账号net-user-test-del" class="headerlink" title="六、删除账号net user test /del"></a>六、删除账号net user test /del</h3><p><img src="/imgs/userdel.png"></p>
<h3 id="七、查看账号net-users"><a href="#七、查看账号net-users" class="headerlink" title="七、查看账号net users"></a>七、查看账号net users</h3><p><img src="/imgs/userStatus.png"></p>
]]></content>
      
        <categories>
            
            <category> WindowsCmd </category>
            
        </categories>
        
        
        <tags>
            
            <tag> windowsCmd </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo generate 执行时报 offset 错误]]></title>
      <url>/2017/05/24/hexo-generate-%E6%89%A7%E8%A1%8C%E6%97%B6%E6%8A%A5-offset-%E9%94%99%E8%AF%AF/</url>
      <content type="html"><![CDATA[<h4 id="一、hexo-g-出错"><a href="#一、hexo-g-出错" class="headerlink" title="一、hexo g 出错"></a>一、hexo g 出错</h4><p>截图： <img src="/imgs/timezone.png"><br>原因：我在_confing.yml下 timezone配置错了  </p>
<p>错误配置： timezone： ChongQing</p>
<p>如果设置cheng +08:00 后 momentjs解析会报异常<br>需要将timezone配置成 时区名称：<br><img src="/imgs/timezone1.png"></p>
]]></content>
      
        <categories>
            
            <category> Hexo报错 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> error </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[learn markdown]]></title>
      <url>/2017/05/24/learn-markdown/</url>
      <content type="html"><![CDATA[<h3 id="一、markdown学习分享"><a href="#一、markdown学习分享" class="headerlink" title="一、markdown学习分享"></a>一、markdown学习分享</h3><p> <code>link</code> <a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">markdown语法学习大全</a></p>
<h3 id="二、markdown推荐编辑器"><a href="#二、markdown推荐编辑器" class="headerlink" title="二、markdown推荐编辑器"></a>二、markdown推荐编辑器</h3><p>小书匠、未知笔记、cmd markdown</p>
]]></content>
      
        <categories>
            
            <category> Markdown </category>
            
        </categories>
        
        
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo 建站分享]]></title>
      <url>/2017/05/16/hexo-%E5%BB%BA%E7%AB%99%E5%88%86%E4%BA%AB/</url>
      <content type="html"><![CDATA[<h4 id="一-建站连接分享"><a href="#一-建站连接分享" class="headerlink" title="一.建站连接分享"></a>一.建站连接分享</h4><p><code>link</code> <a href="https://segmentfault.com/a/1190000004947261" target="_blank" rel="external">手把手教学Hexo+Githup pages搭建个人博客</a><br><code>link</code> <a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external"> markdown半小时入门分享</a></p>
<h4 id="二-建站遇到的问题"><a href="#二-建站遇到的问题" class="headerlink" title="二.建站遇到的问题"></a>二.建站遇到的问题</h4><p>当hexo d -g出错，找不到git时，看我之前的一篇<a href="https://ctbumyq.github.io/2017/05/16/hexo-d-%E5%87%BA%E9%94%99/">hexo -d错误解决</a>。</p>
]]></content>
      
        <categories>
            
            <category> Hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 静态建站 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo d 出错]]></title>
      <url>/2017/05/16/hexo-d-%E5%87%BA%E9%94%99/</url>
      <content type="html"><![CDATA[<h4 id="一-找不到git部署"><a href="#一-找不到git部署" class="headerlink" title="一.找不到git部署"></a>一.找不到git部署</h4><p><code>error</code> ERROR Deployer not found: git<br><code>原因</code> 没有部署hexo-deployer-git<br><code>解决方案</code> npm install hexo-deployer-git –save</p>
<h4 id="二-当我们首次安装hexo时修改了hexo的-config-yml时不生效"><a href="#二-当我们首次安装hexo时修改了hexo的-config-yml时不生效" class="headerlink" title="二.当我们首次安装hexo时修改了hexo的_config.yml时不生效"></a>二.当我们首次安装hexo时修改了hexo的_config.yml时不生效</h4><p>解决方案同上</p>
]]></content>
      
        <categories>
            
            <category> Hexo报错 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> error </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo 创建一篇文章]]></title>
      <url>/2017/05/16/hexo-%E5%88%9B%E5%BB%BA%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      <content type="html"><![CDATA[<h4 id="一-创建文章"><a href="#一-创建文章" class="headerlink" title="一.创建文章"></a>一.创建文章</h4><p>1.hexo new “postName” #新建文章</p>
<h4 id="二-设置文章头部-文件被放在source-posts"><a href="#二-设置文章头部-文件被放在source-posts" class="headerlink" title="二.设置文章头部(文件被放在source/_posts)"></a>二.设置文章头部(文件被放在source/_posts)</h4><p>1.先用<code>markdown</code>编辑器打开文件<br>2.设置表头:<br><figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">title: hexo 创建一篇文章</div><div class="line">layout: post</div><div class="line">date: 2017<span class="string">-05</span><span class="string">-16</span> 15:19:08</div><div class="line">comments: true</div><div class="line"><span class="keyword">tags:</span> [Hexo]</div><div class="line">keywords: hexo,blog</div></pre></td></tr></table></figure></p>
<p>3.正文</p>
<h4 id="三-发布到githup"><a href="#三-发布到githup" class="headerlink" title="三.发布到githup"></a>三.发布到githup</h4><p>1.先清除缓存<br><code>hexo clean</code><br>2.发布<br><code>hexo d -g</code></p>
]]></content>
      
        <categories>
            
            <category> Hexo学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/05/15/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[about]]></title>
      <url>/about/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[categories]]></title>
      <url>/categories/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[tags]]></title>
      <url>/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
